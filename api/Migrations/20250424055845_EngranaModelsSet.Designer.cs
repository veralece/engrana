// <auto-generated />
using System;
using Engrana.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(EngranaContext))]
    [Migration("20250424055845_EngranaModelsSet")]
    partial class EngranaModelsSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConfigurationItemConfigurationItem", b =>
                {
                    b.Property<Guid>("DownstreamConfigurationItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpstreamConfigurationItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DownstreamConfigurationItemsId", "UpstreamConfigurationItemsId");

                    b.HasIndex("UpstreamConfigurationItemsId");

                    b.ToTable("ConfigurationItemConfigurationItem");
                });

            modelBuilder.Entity("Engrana.Domain.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("Engrana.Domain.Change", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Change");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BooleanPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BooleanPropertyId");

                    b.ToTable("BooleanEntry");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfigurationItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("EntityTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("HintMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("KnowledgeArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhysicalAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ChangeId");

                    b.HasIndex("ConfigurationItemId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("KnowledgeArticleId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("BooleanProperty");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanPropertyState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DataStepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCustomProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyCondition")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ConditionStatementId");

                    b.HasIndex("DataStepId");

                    b.ToTable("PropertyStateBoolean");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ConditionStatement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionStatement");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ConditionStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConditionStatementId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("ConditionStep");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DataStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("DataStep");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DateEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DatePropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Value")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DatePropertyId");

                    b.ToTable("DateEntry");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DateProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfigurationItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("EntityTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("HintMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("KnowledgeArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhysicalAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ChangeId");

                    b.HasIndex("ConfigurationItemId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("KnowledgeArticleId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceRequestId");

                    b.HasIndex("SetId");

                    b.ToTable("DateProperty");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DatePropertyState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DataStepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCustomProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyCondition")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Value")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConditionStatementId");

                    b.HasIndex("DataStepId");

                    b.ToTable("PropertyStateDate");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DateSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DateSet");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NumberPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumberPropertyId");

                    b.ToTable("NumberEntry");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfigurationItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("EntityTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("HintMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("KnowledgeArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhysicalAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ChangeId");

                    b.HasIndex("ConfigurationItemId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("KnowledgeArticleId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceRequestId");

                    b.HasIndex("SetId");

                    b.ToTable("NumberProperty");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberPropertyState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DataStepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCustomProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyCondition")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConditionStatementId");

                    b.HasIndex("DataStepId");

                    b.ToTable("PropertyStateNumber");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NumberSet");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.OrganizationQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationQueue");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ServiceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceCategoryOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCategoryOwnerId");

                    b.ToTable("ServiceCategory");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StringPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StringPropertyId");

                    b.ToTable("StringEntry");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfigurationItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("EntityTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("HintMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("KnowledgeArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhysicalAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ChangeId");

                    b.HasIndex("ConfigurationItemId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("KnowledgeArticleId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceRequestId");

                    b.HasIndex("SetId");

                    b.ToTable("StringProperty");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringPropertyState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DataStepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCustomProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyCondition")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConditionStatementId");

                    b.HasIndex("DataStepId");

                    b.ToTable("PropertyStateString");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StringSet");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.Trigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<Guid>("ConditionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowMessage")
                        .HasColumnType("bit");

                    b.Property<int>("TriggerEntity")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConditionStatementId");

                    b.ToTable("Trigger");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.Workflow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Workflow");
                });

            modelBuilder.Entity("Engrana.Domain.ConfigurationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ConfigurationItem");
                });

            modelBuilder.Entity("Engrana.Domain.ContactInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ContactInformation");
                });

            modelBuilder.Entity("Engrana.Domain.Incident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrimaryContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryContactId");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("Engrana.Domain.KnowledgeArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KnowledgeArticle");
                });

            modelBuilder.Entity("Engrana.Domain.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Urls")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("Engrana.Domain.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Engrana.Domain.PhysicalAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("PhysicalAddress");
                });

            modelBuilder.Entity("Engrana.Domain.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("Engrana.Domain.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationQueueId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Engrana.Domain.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Engrana.Domain.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("ServiceOwnerId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Engrana.Domain.ServiceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedQueueId");

                    b.HasIndex("AssignedResourceId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceRequest");
                });

            modelBuilder.Entity("ConfigurationItemConfigurationItem", b =>
                {
                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany()
                        .HasForeignKey("DownstreamConfigurationItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany()
                        .HasForeignKey("UpstreamConfigurationItemsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Engrana.Domain.Asset", b =>
                {
                    b.HasOne("Engrana.Domain.PhysicalAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Engrana.Domain.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Address");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Engrana.Domain.Change", b =>
                {
                    b.HasOne("Engrana.Domain.Project", null)
                        .WithMany("Changes")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanEntry", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.BooleanProperty", null)
                        .WithMany("Entries")
                        .HasForeignKey("BooleanPropertyId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanProperty", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.Change", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ChangeId");

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ConfigurationItemId");

                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Incident", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("IncidentId");

                    b.HasOne("Engrana.Domain.KnowledgeArticle", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("KnowledgeArticleId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Engrana.Domain.Organization", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Engrana.Domain.PhysicalAddress", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("Engrana.Domain.Portfolio", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Engrana.Domain.Profile", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ProfileId");

                    b.HasOne("Engrana.Domain.Project", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Engrana.Domain.Service", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ServiceId");

                    b.HasOne("Engrana.Domain.ServiceRequest", null)
                        .WithMany("AdditionalBooleanProperties")
                        .HasForeignKey("ServiceRequestId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanPropertyState", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.ConditionStatement", null)
                        .WithMany("BooleanPropertyStateConditions")
                        .HasForeignKey("ConditionStatementId");

                    b.HasOne("Engrana.Domain.Configuration.DataStep", null)
                        .WithMany("BooleanPropertyToUpdate")
                        .HasForeignKey("DataStepId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ConditionStep", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.ConditionStatement", "ConditionStatement")
                        .WithMany()
                        .HasForeignKey("ConditionStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Engrana.Domain.Configuration.Workflow", null)
                        .WithMany("ConditionSteps")
                        .HasForeignKey("WorkflowId");

                    b.Navigation("ConditionStatement");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DataStep", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.Workflow", null)
                        .WithMany("DataSteps")
                        .HasForeignKey("WorkflowId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DateEntry", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.DateProperty", null)
                        .WithMany("Entries")
                        .HasForeignKey("DatePropertyId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DateProperty", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.Change", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ChangeId");

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ConfigurationItemId");

                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Incident", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("IncidentId");

                    b.HasOne("Engrana.Domain.KnowledgeArticle", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("KnowledgeArticleId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Engrana.Domain.Organization", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Engrana.Domain.PhysicalAddress", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("Engrana.Domain.Portfolio", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Engrana.Domain.Profile", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ProfileId");

                    b.HasOne("Engrana.Domain.Project", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Engrana.Domain.Service", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ServiceId");

                    b.HasOne("Engrana.Domain.ServiceRequest", null)
                        .WithMany("AdditionalDateProperties")
                        .HasForeignKey("ServiceRequestId");

                    b.HasOne("Engrana.Domain.Configuration.DateSet", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DatePropertyState", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.ConditionStatement", null)
                        .WithMany("DatePropertyStateConditions")
                        .HasForeignKey("ConditionStatementId");

                    b.HasOne("Engrana.Domain.Configuration.DataStep", null)
                        .WithMany("DatePropertyToUpdate")
                        .HasForeignKey("DataStepId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberEntry", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.NumberProperty", null)
                        .WithMany("Entries")
                        .HasForeignKey("NumberPropertyId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberProperty", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.Change", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ChangeId");

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ConfigurationItemId");

                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Incident", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("IncidentId");

                    b.HasOne("Engrana.Domain.KnowledgeArticle", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("KnowledgeArticleId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Engrana.Domain.Organization", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Engrana.Domain.PhysicalAddress", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("Engrana.Domain.Portfolio", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Engrana.Domain.Profile", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ProfileId");

                    b.HasOne("Engrana.Domain.Project", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Engrana.Domain.Service", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ServiceId");

                    b.HasOne("Engrana.Domain.ServiceRequest", null)
                        .WithMany("AdditionalNumberProperties")
                        .HasForeignKey("ServiceRequestId");

                    b.HasOne("Engrana.Domain.Configuration.NumberSet", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberPropertyState", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.ConditionStatement", null)
                        .WithMany("NumberPropertyStateConditions")
                        .HasForeignKey("ConditionStatementId");

                    b.HasOne("Engrana.Domain.Configuration.DataStep", null)
                        .WithMany("NumberPropertyToUpdate")
                        .HasForeignKey("DataStepId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.OrganizationQueue", b =>
                {
                    b.HasOne("Engrana.Domain.Organization", "Organization")
                        .WithMany("OrganizationQueues")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ServiceCategory", b =>
                {
                    b.HasOne("Engrana.Domain.Organization", "ServiceCategoryOwner")
                        .WithMany("ServiceCategories")
                        .HasForeignKey("ServiceCategoryOwnerId");

                    b.Navigation("ServiceCategoryOwner");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringEntry", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.StringProperty", null)
                        .WithMany("Entries")
                        .HasForeignKey("StringPropertyId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringProperty", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.Change", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ChangeId");

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ConfigurationItemId");

                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Incident", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("IncidentId");

                    b.HasOne("Engrana.Domain.KnowledgeArticle", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("KnowledgeArticleId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Engrana.Domain.Organization", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Engrana.Domain.PhysicalAddress", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("Engrana.Domain.Portfolio", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Engrana.Domain.Profile", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ProfileId");

                    b.HasOne("Engrana.Domain.Project", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Engrana.Domain.Service", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ServiceId");

                    b.HasOne("Engrana.Domain.ServiceRequest", null)
                        .WithMany("AdditionalStringProperties")
                        .HasForeignKey("ServiceRequestId");

                    b.HasOne("Engrana.Domain.Configuration.StringSet", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringPropertyState", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.ConditionStatement", null)
                        .WithMany("StringPropertyStateConditions")
                        .HasForeignKey("ConditionStatementId");

                    b.HasOne("Engrana.Domain.Configuration.DataStep", null)
                        .WithMany("StringPropertyToUpdate")
                        .HasForeignKey("DataStepId");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.Trigger", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.ConditionStatement", "ConditionStatement")
                        .WithMany()
                        .HasForeignKey("ConditionStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConditionStatement");
                });

            modelBuilder.Entity("Engrana.Domain.ConfigurationItem", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.Incident", null)
                        .WithMany("AffectedCIs")
                        .HasForeignKey("IncidentId");

                    b.HasOne("Engrana.Domain.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");

                    b.Navigation("Asset");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Engrana.Domain.ContactInformation", b =>
                {
                    b.HasOne("Engrana.Domain.Incident", null)
                        .WithMany("AdditionalContacts")
                        .HasForeignKey("IncidentId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("Engrana.Domain.Incident", b =>
                {
                    b.HasOne("Engrana.Domain.ContactInformation", "PrimaryContact")
                        .WithMany()
                        .HasForeignKey("PrimaryContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryContact");
                });

            modelBuilder.Entity("Engrana.Domain.Organization", b =>
                {
                    b.HasOne("Engrana.Domain.Portfolio", "Portfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioId");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Engrana.Domain.PhysicalAddress", b =>
                {
                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("Engrana.Domain.Profile", b =>
                {
                    b.HasOne("Engrana.Domain.Organization", null)
                        .WithMany("Resources")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Engrana.Domain.Configuration.OrganizationQueue", null)
                        .WithMany("Resources")
                        .HasForeignKey("OrganizationQueueId");
                });

            modelBuilder.Entity("Engrana.Domain.Project", b =>
                {
                    b.HasOne("Engrana.Domain.Portfolio", null)
                        .WithMany("Projects")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("Engrana.Domain.Service", b =>
                {
                    b.HasOne("Engrana.Domain.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Engrana.Domain.Portfolio", null)
                        .WithMany("Services")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("Engrana.Domain.Configuration.ServiceCategory", null)
                        .WithMany("Services")
                        .HasForeignKey("ServiceCategoryId");

                    b.HasOne("Engrana.Domain.Organization", "ServiceOwner")
                        .WithMany()
                        .HasForeignKey("ServiceOwnerId");

                    b.Navigation("Manufacturer");

                    b.Navigation("ServiceOwner");
                });

            modelBuilder.Entity("Engrana.Domain.ServiceRequest", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.OrganizationQueue", "AssignedQueue")
                        .WithMany()
                        .HasForeignKey("AssignedQueueId");

                    b.HasOne("Engrana.Domain.Profile", "AssignedResource")
                        .WithMany()
                        .HasForeignKey("AssignedResourceId");

                    b.HasOne("Engrana.Domain.Project", null)
                        .WithMany("ServiceRequests")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Engrana.Domain.Configuration.ServiceCategory", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId");

                    b.HasOne("Engrana.Domain.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");

                    b.Navigation("AssignedQueue");

                    b.Navigation("AssignedResource");

                    b.Navigation("Service");

                    b.Navigation("ServiceCategory");
                });

            modelBuilder.Entity("Engrana.Domain.Asset", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.Change", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.BooleanProperty", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ConditionStatement", b =>
                {
                    b.Navigation("BooleanPropertyStateConditions");

                    b.Navigation("DatePropertyStateConditions");

                    b.Navigation("NumberPropertyStateConditions");

                    b.Navigation("StringPropertyStateConditions");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DataStep", b =>
                {
                    b.Navigation("BooleanPropertyToUpdate");

                    b.Navigation("DatePropertyToUpdate");

                    b.Navigation("NumberPropertyToUpdate");

                    b.Navigation("StringPropertyToUpdate");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.DateProperty", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.NumberProperty", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.OrganizationQueue", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.ServiceCategory", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.StringProperty", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.Workflow", b =>
                {
                    b.Navigation("ConditionSteps");

                    b.Navigation("DataSteps");
                });

            modelBuilder.Entity("Engrana.Domain.ConfigurationItem", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.ContactInformation", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");

                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Engrana.Domain.Incident", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalContacts");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");

                    b.Navigation("AffectedCIs");
                });

            modelBuilder.Entity("Engrana.Domain.KnowledgeArticle", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.Manufacturer", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");

                    b.Navigation("Addresses");

                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Engrana.Domain.Organization", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");

                    b.Navigation("OrganizationQueues");

                    b.Navigation("Resources");

                    b.Navigation("ServiceCategories");
                });

            modelBuilder.Entity("Engrana.Domain.PhysicalAddress", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.Portfolio", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");

                    b.Navigation("Projects");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Engrana.Domain.Profile", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.Project", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");

                    b.Navigation("Changes");

                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("Engrana.Domain.Service", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });

            modelBuilder.Entity("Engrana.Domain.ServiceRequest", b =>
                {
                    b.Navigation("AdditionalBooleanProperties");

                    b.Navigation("AdditionalDateProperties");

                    b.Navigation("AdditionalNumberProperties");

                    b.Navigation("AdditionalStringProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
