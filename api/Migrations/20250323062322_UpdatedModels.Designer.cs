// <auto-generated />
using System;
using Engrana.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(EngranaContext))]
    [Migration("20250323062322_UpdatedModels")]
    partial class UpdatedModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConfigurationItemConfigurationItem", b =>
                {
                    b.Property<Guid>("DownstreamConfigurationItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpstreamConfigurationItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DownstreamConfigurationItemsId", "UpstreamConfigurationItemsId");

                    b.HasIndex("UpstreamConfigurationItemsId");

                    b.ToTable("ConfigurationItemConfigurationItem");
                });

            modelBuilder.Entity("Engrana.Domain.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.CustomField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfigurationItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Entity")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhysicalAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ConfigurationItemId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("SetId");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.CustomFieldEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("BoolValue")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CustomFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateValue")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("MultiValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldId");

                    b.ToTable("CustomFieldEntry");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.CustomSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Values")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomSet");
                });

            modelBuilder.Entity("Engrana.Domain.ConfigurationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ConfigurationItem");
                });

            modelBuilder.Entity("Engrana.Domain.ContactInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ContactInformation");
                });

            modelBuilder.Entity("Engrana.Domain.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Urls")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("Engrana.Domain.PhysicalAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("PhysicalAddress");
                });

            modelBuilder.Entity("ConfigurationItemConfigurationItem", b =>
                {
                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany()
                        .HasForeignKey("DownstreamConfigurationItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany()
                        .HasForeignKey("UpstreamConfigurationItemsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Engrana.Domain.Asset", b =>
                {
                    b.HasOne("Engrana.Domain.PhysicalAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Engrana.Domain.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Address");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.CustomField", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", null)
                        .WithMany("CustomFields")
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.ConfigurationItem", null)
                        .WithMany("CustomFields")
                        .HasForeignKey("ConfigurationItemId");

                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("CustomFields")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("CustomFields")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Engrana.Domain.PhysicalAddress", null)
                        .WithMany("CustomFields")
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("Engrana.Domain.Configuration.CustomSet", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.CustomFieldEntry", b =>
                {
                    b.HasOne("Engrana.Domain.Configuration.CustomField", null)
                        .WithMany("Entries")
                        .HasForeignKey("CustomFieldId");
                });

            modelBuilder.Entity("Engrana.Domain.ConfigurationItem", b =>
                {
                    b.HasOne("Engrana.Domain.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("Engrana.Domain.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Asset");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Engrana.Domain.ContactInformation", b =>
                {
                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("Engrana.Domain.PhysicalAddress", b =>
                {
                    b.HasOne("Engrana.Domain.ContactInformation", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Engrana.Domain.Manufacturer", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("Engrana.Domain.Asset", b =>
                {
                    b.Navigation("CustomFields");
                });

            modelBuilder.Entity("Engrana.Domain.Configuration.CustomField", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Engrana.Domain.ConfigurationItem", b =>
                {
                    b.Navigation("CustomFields");
                });

            modelBuilder.Entity("Engrana.Domain.ContactInformation", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("CustomFields");
                });

            modelBuilder.Entity("Engrana.Domain.Manufacturer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Contacts");

                    b.Navigation("CustomFields");
                });

            modelBuilder.Entity("Engrana.Domain.PhysicalAddress", b =>
                {
                    b.Navigation("CustomFields");
                });
#pragma warning restore 612, 618
        }
    }
}
